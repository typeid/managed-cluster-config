---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sre-operator-reinstall
  namespace: openshift-ocm-agent-operator
spec:
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  concurrencyPolicy: Replace
  schedule: "*/30  * * * *"
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 100
      template:
        spec:
          serviceAccountName: sre-operator-reinstall-sa
          restartPolicy: Never
          containers:
            - name: operator-reinstaller
              image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
              imagePullPolicy: Always
              command:
                - sh
                - -c
                - |
                  #!/bin/bash
                  set -euxo pipefail
                  NAMESPACE=openshift-ocm-agent-operator
                  OPERATOR=ocm-agent-operator

                  # Path for temporary subscription JSON backup
                  SUB_JSON_PATH="/tmp/sub.json"

                  # The OLM dance
                  # Delete CSVs if they exist
                  CSV_LIST=$(oc get clusterserviceversions.operators.coreos.com -n "$NAMESPACE" | grep "$OPERATOR" | awk 'NR > 1 {print $1}' || echo "")
                  if [[ -n "$CSV_LIST" ]]; then
                    echo "Deleting CSVs for operator $OPERATOR in namespace $NAMESPACE..."
                    echo "$CSV_LIST" | xargs -r -I {} oc delete clusterserviceversions.operators.coreos.com -n "$NAMESPACE" {}
                  else
                    echo "No CSVs found for operator $OPERATOR in namespace $NAMESPACE."
                  fi

                  # Delete InstallPlans if they exist
                  INSTALLPLAN_LIST=$(oc get installplans.operators.coreos.com -n "$NAMESPACE" | grep "$OPERATOR" | awk 'NR > 1 {print $1}' || echo "")
                  if [[ -n "$INSTALLPLAN_LIST" ]]; then
                    echo "Deleting InstallPlans for operator $OPERATOR in namespace $NAMESPACE..."
                    echo "$INSTALLPLAN_LIST" | xargs -r -I {} oc delete installplans.operators.coreos.com -n "$NAMESPACE" {}
                  else
                    echo "No InstallPlans found for operator $OPERATOR in namespace $NAMESPACE."
                  fi

                  # Delete and re-create fresh subscription if it exists
                  if oc get subscriptions.operators.coreos.com -n "$NAMESPACE" "$OPERATOR" -o json > "$SUB_JSON_PATH" 2>/dev/null; then
                    echo "Subscription found for operator $OPERATOR in namespace $NAMESPACE. Backing it up to $SUB_JSON_PATH..."
                    jq 'del(.status) | del(.metadata.creationTimestamp) | del(.metadata.generation) | del(.metadata.resourceVersion) | del(.metadata.uid)' "$SUB_JSON_PATH" > "${SUB_JSON_PATH}.tmp" && mv "${SUB_JSON_PATH}.tmp" "$SUB_JSON_PATH"
                    echo "Deleting subscription for operator $OPERATOR in namespace $NAMESPACE..."
                    oc delete subscriptions.operators.coreos.com -n "$NAMESPACE" "$OPERATOR" || echo "Failed to delete subscription for operator $OPERATOR."
                    echo "Re-creating subscription for operator $OPERATOR in namespace $NAMESPACE..."
                    oc create -f "$SUB_JSON_PATH"
                  else
                    echo "No subscription found for operator $OPERATOR in namespace $NAMESPACE. Skipping re-creation."
                  fi

                  # Clean up associated resources
                  oc -n "$NAMESPACE" delete cronjob.batch sre-operator-reinstall || true
                  oc -n "$NAMESPACE" delete roles.authorization.openshift.io sre-operator-reinstall-role || true
                  oc -n "$NAMESPACE" delete rolebindings.authorization.openshift.io sre-operator-reinstall-rb || true
                  oc -n "$NAMESPACE" delete serviceaccount sre-operator-reinstall-sa || true
